{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin20.6.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(tidyverse)",
        "Registered S3 methods overwritten by 'dbplyr':\n  method         from\n  print.tbl_lazy     \n  print.tbl_sql      \n",
        "\u001B[30m── \u001B[1mAttaching packages\u001B[22m ────────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ──\u001B[39m\n",
        "\u001B[30m\u001B[32m✓\u001B[30m \u001B[34mggplot2\u001B[30m 3.3.5     \u001B[32m✓\u001B[30m \u001B[34mpurrr  \u001B[30m 0.3.4\n\u001B[32m✓\u001B[30m \u001B[34mtibble \u001B[30m 3.1.6     \u001B[32m✓\u001B[30m \u001B[34mdplyr  \u001B[30m 1.0.7\n\u001B[32m✓\u001B[30m \u001B[34mtidyr  \u001B[30m 1.1.4     \u001B[32m✓\u001B[30m \u001B[34mstringr\u001B[30m 1.4.0\n\u001B[32m✓\u001B[30m \u001B[34mreadr  \u001B[30m 2.1.0     \u001B[32m✓\u001B[30m \u001B[34mforcats\u001B[30m 0.5.1\u001B[39m\n",
        "\u001B[30m── \u001B[1mConflicts\u001B[22m ───────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mfilter()\u001B[30m masks \u001B[34mstats\u001B[30m::filter()\n\u001B[31mx\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mlag()\u001B[30m    masks \u001B[34mstats\u001B[30m::lag()\u001B[39m\n",
        "> ",
        "head(ads)",
        "Error in head(ads) : object 'ads' not found\n",
        "> ",
        "ads <- read.csv(~/Documents/DS-Projects/R/advertisement recommendation/advertising.csv)",
        "Error: unexpected '/' in \"ads <- read.csv(~/\"\n",
        "> ",
        "ads <- read.csv(Documents/DS-Projects/R/advertisement recommendation/advertising.csv)",
        "Error: unexpected symbol in \"ads <- read.csv(Documents/DS-Projects/R/advertisement recommendation\"\n",
        "> ",
        "",
        "> ",
        "ads <- read.csv(Documents/DS-Projects/R/advertisement recommendation/advertising.csv)",
        "Error: unexpected symbol in \"ads <- read.csv(Documents/DS-Projects/R/advertisement recommendation\"\n",
        "> ",
        "ads <- read.csv(/Documents/DS-Projects/R/advertisement recommendation/advertising.csv)",
        "Error: unexpected '/' in \"ads <- read.csv(/\"\n",
        "> ",
        "ads <- read.csv(DS-Projects/R/advertisement recommendation/advertising.csv)",
        "Error: unexpected symbol in \"ads <- read.csv(DS-Projects/R/advertisement recommendation\"\n",
        "> ",
        "ads <- read.csv('~/Documents/DS-Projects/R/advertisement recommendation/advertising.csv')",
        "> ",
        "head(ads)",
        "> ",
        "# Load Libraries",
        "> ",
        "```{R}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "library('data.table')",
        "data.table 1.14.2 using 1 threads (see ?getDTthreads).  Latest news: r-datatable.com\n",
        "**********\nThis installation of data.table has not detected OpenMP support. It should still work but in single-threaded mode.\nThis is a Mac. Please read https://mac.r-project.org/openmp/. Please engage with Apple and ask them for support. Check r-datatable.com for updates, and our Mac instructions here: https://github.com/Rdatatable/data.table/wiki/Installation. After several years of many reports of installation problems on Mac, it's time to gingerly point out that there have been no similar problems on Windows or Linux.\n**********\n",
        "\nAttaching package: ‘data.table’\n\n",
        "The following objects are masked from ‘package:dplyr’:\n\n    between, first, last\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    transpose\n\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "# Load the dataset",
        "> ",
        "```{R}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "ads <- read.csv('~/Documents/DS-Projects/R/advertisement recommendation/advertising.csv')",
        "> ",
        "#print first 6 rows",
        "> ",
        "head(ads)",
        "  Daily.Time.Spent.on.Site Age Area.Income Daily.Internet.Usage                         Ad.Topic.Line           City\n1                    68.95  35    61833.90               256.09    Cloned 5thgeneration orchestration    Wrightburgh\n2                    80.23  31    68441.85               193.77    Monitored national standardization      West Jodi\n3                    69.47  26    59785.94               236.50      Organic bottom-line service-desk       Davidton\n4                    74.15  29    54806.18               245.89",
        " Triple-buffered reciprocal time-frame West Terrifurt\n5                    68.37  35    73889.99               225.58         Robust logistical utilization   South Manuel\n6                    59.99  23    59761.56               226.74       Sharable client-driven software      Jamieberg\n  Male    Country           Timestamp Clicked.on.Ad\n1    0    Tunisia 2016-03-27 00:53:11             0\n2    1      Nauru 2016-04-04 01:39:02             0\n3    0 San Marino 2016-03-13 20:35:42             0\n4    1      Italy",
        " 2016-01-10 02:31:19             0\n5    0    Iceland 2016-06-03 03:36:18             0\n6    1     Norway 2016-05-19 14:30:17             0\n",
        "> ",
        "plot(cars)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library('data.table')",
        "> ",
        "library(tidyverse)",
        "> ",
        "```{r}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "head(ads)",
        "> ",
        "```{r}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "ads <- read.csv('~/Documents/DS-Projects/R/advertisement recommendation/advertising.csv')",
        "> ",
        "head(ads)",
        "> ",
        "# Size of the dataset",
        "> ",
        "nrow(ads)",
        "[1] 1000\n",
        "> ",
        "ncol(ads)",
        "[1] 10\n",
        "> ",
        "# Size of the dataset",
        "> ",
        "nrow(ads)",
        "[1] 1000\n",
        "> ",
        "ncol(ads)",
        "[1] 10\n",
        "> ",
        "# Size of the dataset",
        "> ",
        "print(nrow(ads))",
        "[1] 1000\n",
        "> ",
        "ncol(ads)",
        "[1] 10\n",
        "> ",
        "# Size of the dataset",
        "> ",
        "print(nrow(ads))",
        "[1] 1000\n",
        "> ",
        "print(ncol(ads))",
        "[1] 10\n",
        "> ",
        "",
        "> ",
        "is.na(ads)",
        "        Daily.Time.Spent.on.Site   Age Area.Income Daily.Internet.Usage Ad.Topic.Line  City  Male Country Timestamp\n   [1,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [2,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [3,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [4,]                    FALSE FALSE       FALSE",
        "                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [5,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [6,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [7,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n   [8,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE",
        "     FALSE\n   [9,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [10,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [11,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [12,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [13,]                    FALSE FALSE",
        "       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [14,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [15,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [16,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [17,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE",
        " FALSE   FALSE     FALSE\n  [18,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [19,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [20,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [21,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [22,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [23,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [24,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [25,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [26,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [27,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [28,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [29,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [30,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [31,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [32,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [33,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [34,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [35,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [36,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [37,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [38,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [39,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [40,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [41,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [42,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [43,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [44,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [45,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [46,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [47,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [48,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [49,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [50,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [51,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [52,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [53,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [54,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [55,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [56,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [57,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [58,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [59,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [60,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [61,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [62,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [63,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [64,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [65,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [66,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [67,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [68,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [69,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [70,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [71,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [72,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [73,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [74,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [75,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [76,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [77,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [78,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [79,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [80,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [81,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [82,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [83,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [84,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [85,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [86,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [87,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [88,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [89,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [90,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [91,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [92,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [93,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [94,]                    FALSE",
        " FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [95,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [96,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [97,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n  [98,]                    FALSE FALSE       FALSE                FALSE         FALSE",
        " FALSE FALSE   FALSE     FALSE\n  [99,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n [100,]                    FALSE FALSE       FALSE                FALSE         FALSE FALSE FALSE   FALSE     FALSE\n        Clicked.on.Ad\n   [1,]         FALSE\n   [2,]         FALSE\n   [3,]         FALSE\n   [4,]         FALSE\n   [5,]         FALSE\n   [6,]         FALSE\n   [7,]         FALSE\n   [8,]         FALSE\n   [9,]         FALSE\n  [10,]         FALSE\n  [11,]",
        "         FALSE\n  [12,]         FALSE\n  [13,]         FALSE\n  [14,]         FALSE\n  [15,]         FALSE\n  [16,]         FALSE\n  [17,]         FALSE\n  [18,]         FALSE\n  [19,]         FALSE\n  [20,]         FALSE\n  [21,]         FALSE\n  [22,]         FALSE\n  [23,]         FALSE\n  [24,]         FALSE\n  [25,]         FALSE\n  [26,]         FALSE\n  [27,]         FALSE\n  [28,]         FALSE\n  [29,]         FALSE\n  [30,]         FALSE\n  [31,]         FALSE\n  [32,]         FALSE\n  [33,]         FALSE\n  [34,]         FALSE",
        "\n  [35,]         FALSE\n  [36,]         FALSE\n  [37,]         FALSE\n  [38,]         FALSE\n  [39,]         FALSE\n  [40,]         FALSE\n  [41,]         FALSE\n  [42,]         FALSE\n  [43,]         FALSE\n  [44,]         FALSE\n  [45,]         FALSE\n  [46,]         FALSE\n  [47,]         FALSE\n  [48,]         FALSE\n  [49,]         FALSE\n  [50,]         FALSE\n  [51,]         FALSE\n  [52,]         FALSE\n  [53,]         FALSE\n  [54,]         FALSE\n  [55,]         FALSE\n  [56,]         FALSE\n  [57,]         FALSE\n  [58,]",
        "         FALSE\n  [59,]         FALSE\n  [60,]         FALSE\n  [61,]         FALSE\n  [62,]         FALSE\n  [63,]         FALSE\n  [64,]         FALSE\n  [65,]         FALSE\n  [66,]         FALSE\n  [67,]         FALSE\n  [68,]         FALSE\n  [69,]         FALSE\n  [70,]         FALSE\n  [71,]         FALSE\n  [72,]         FALSE\n  [73,]         FALSE\n  [74,]         FALSE\n  [75,]         FALSE\n  [76,]         FALSE\n  [77,]         FALSE\n  [78,]         FALSE\n  [79,]         FALSE\n  [80,]         FALSE\n  [81,]         FALSE",
        "\n  [82,]         FALSE\n  [83,]         FALSE\n  [84,]         FALSE\n  [85,]         FALSE\n  [86,]         FALSE\n  [87,]         FALSE\n  [88,]         FALSE\n  [89,]         FALSE\n  [90,]         FALSE\n  [91,]         FALSE\n  [92,]         FALSE\n  [93,]         FALSE\n  [94,]         FALSE\n  [95,]         FALSE\n  [96,]         FALSE\n  [97,]         FALSE\n  [98,]         FALSE\n  [99,]         FALSE\n [100,]         FALSE\n [ reached getOption(\"max.print\") -- omitted 900 rows ]\n",
        "> ",
        "colSums(is.na(ads))",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                       0                        0                        0                        0 \n           Ad.Topic.Line                     City                     Male                  Country \n                       0                        0                        0                        0 \n               Timestamp            Clicked.on.Ad \n                       0                        0 \n",
        "> ",
        "ads[duplicated(ads)]",
        "> ",
        "dups",
        "Error: object 'dups' not found\n",
        "> ",
        "dups <- ads[duplicated(ads)]",
        "> ",
        "dups <- ads[duplicated(ads)]",
        "> ",
        "dups",
        "> ",
        "unique(ads)",
        "> ",
        "colSums(ads[duplicated(ads)])",
        "numeric(0)\n",
        "> ",
        "boxplot(ads$Daily.Time.Spent.on.Site)",
        "> ",
        "boxplot(ads$Daily.Time.Spent.on.Site)",
        "> ",
        "View(ads)",
        "> ",
        "# age of the customers",
        "> ",
        "boxplot(ads$Age)",
        "> ",
        "# income",
        "> ",
        "boxplot(ads$Area.Income)",
        "> ",
        "# income",
        "> ",
        "boxplot(ads$Daily.Internet.Usage)",
        "> ",
        "```{r}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "# income",
        "> ",
        "boxplot(ads$Area.Income)",
        "> ",
        "boxplot.stats(ads$Area.Income)$out",
        "[1] 17709.98 18819.34 15598.29 15879.10 14548.06 13996.50 14775.50 18368.57\n",
        "> ",
        "#outliers will be saved in a vector",
        "> ",
        "",
        "> ",
        "outliers <- boxplot.stats(ads$Area.Income)$out",
        "> ",
        "outliers",
        "[1] 17709.98 18819.34 15598.29 15879.10 14548.06 13996.50 14775.50 18368.57\n",
        "> ",
        "new_ads",
        "Error: object 'new_ads' not found\n",
        "> ",
        "# Dropping them from our data",
        "> ",
        "new_ads <- ads",
        "> ",
        "new_ads",
        "> ",
        "new_ads <- new_ads[-which(new_ads$Area.Income %in% outliers)]",
        "> ",
        "new_ads",
        "> ",
        "boxplot(new_ads$Area.Income)",
        "> ",
        "new_ads <- new_ads[-which(new_ads$Area.Income %in% outliers),]",
        "> ",
        "boxplot(new_ads$Area.Income)",
        "> ",
        "# outliers in internet usage column",
        "> ",
        "boxplot(new_ads$Daily.Internet.Usage)",
        "> ",
        "numeric_ads",
        "Error: object 'numeric_ads' not found\n",
        "> ",
        "numeric_ads <- select(new_ads, Daily.Time.Spent.on.Site, Daily.Internet.Usage)",
        "> ",
        "numeric_ads",
        "> ",
        "# get the mean for numeric data",
        "> ",
        "",
        "> ",
        "numeric_ads <- select(new_ads, Daily.Time.Spent.on.Site, Age, Area.Income,Daily.Internet.Usage)",
        "> ",
        "numeric_ads",
        "> ",
        "mean(numeric_ads)",
        "Warning in mean.default(numeric_ads) :",
        "\n ",
        " argument is not numeric or logical: returning NA\n",
        "[1] NA\n",
        "> ",
        "mean(numeric_ads$Daily.Time.Spent.on.Site)",
        "[1] 65.03979\n",
        "> ",
        "colMeans(numeric_ads)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                65.03979                 35.98286              55312.80720                179.98504 \n",
        "> ",
        "# Median",
        "> ",
        "apply(numeric_ads, 2, median)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                  68.390                   35.000                57228.185                  183.425 \n",
        "> ",
        "# Mean for all numeric data",
        "> ",
        "apply(numeric_ads, 2, mean)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                65.03979                 35.98286              55312.80720                179.98504 \n",
        "> ",
        "# Minimum values",
        "> ",
        "apply(numeric_ads, 2, min)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                   32.60                    19.00                 19345.36                   104.78 \n",
        "> ",
        "# Maximum values",
        "> ",
        "apply(numeric_ads, 2, max)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n                   91.43                    61.00                 79484.80                   269.96 \n",
        "> ",
        "# range of values",
        "> ",
        "apply(numeric_ads, 2, range)",
        "     Daily.Time.Spent.on.Site Age Area.Income Daily.Internet.Usage\n[1,]                    32.60  19    19345.36               104.78\n[2,]                    91.43  61    79484.80               269.96\n",
        "> ",
        "# Quantiles",
        "> ",
        "apply(numeric_ads, 2, quantile)",
        "     Daily.Time.Spent.on.Site Age Area.Income Daily.Internet.Usage\n0%                     32.600  19    19345.36             104.7800\n25%                    51.285  29    47332.82             138.6475\n50%                    68.390  35    57228.18             183.4250\n75%                    78.585  42    65518.96             218.8425\n100%                   91.430  61    79484.80             269.9600\n",
        "> ",
        "# Variance",
        "> ",
        "apply(numeric_ads, 2, var)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n            2.528609e+02             7.745379e+01             1.691376e+08             1.938785e+03 \n",
        "> ",
        "# Standard deviation",
        "> ",
        "apply(numeric_ads, 2, sd)",
        "Daily.Time.Spent.on.Site                      Age              Area.Income     Daily.Internet.Usage \n               15.901600                 8.800784             13005.290554                44.031632 \n",
        "> ",
        "hist(numeric_ads$Daily.Time.Spent.on.Site)",
        "> ",
        "hist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily time spent on site)",
        "+ ",
        "hist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily time spent on site)",
        "Error: unexpected symbol in:\n\"hist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily time spent on site)\nhist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily\"\n",
        "> ",
        "hist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily time spent on site')",
        "> ",
        "# Distribution of the age groups",
        "> ",
        "hist(numeric_ads$Age, xlab = 'Age')",
        "> ",
        "hist(numeric_ads$Daily.Time.Spent.on.Site, xlab = 'Daily time spent on site', main = 'Distribution of time spent on website by users')",
        "> ",
        "# Distribution of the age groups",
        "> ",
        "hist(numeric_ads$Age, xlab = 'Age', main = 'Distribution of users age')",
        "> ",
        "# Distribution of the age groups",
        "> ",
        "hist(numeric_ads$Age, xlab = 'Age', main = 'Distribution of users age')",
        "> ",
        "hist(numeric_ads$Daily.Internet.Usage, xlab = 'Internet usage', main = 'Distribution of internet usage by users')",
        "> ",
        "cov((numeric_ads$Daily.Time.Spent.on.Site), (numeric_ads$Age))",
        "[1] -46.5009\n",
        "> ",
        "# Correlation of the two",
        "> ",
        "cor((numeric_ads$Daily.Time.Spent.on.Site), (numeric_ads$Age))",
        "[1] -0.3322762\n",
        "> ",
        "# scatterplot",
        "> ",
        "plot((numeric_ads$Daily.Time.Spent.on.Site), (numeric_ads$Age))",
        "> ",
        "# scatterplot",
        "> ",
        "plot((numeric_ads$Daily.Time.Spent.on.Site), (numeric_ads$Age), xlab = 'Time spent', ylab = 'Age')",
        "> ",
        "cov((numeric_ads$Daily.Internet.Usage), (numeric_ads$Age))",
        "[1] -142.5798\n",
        "> ",
        "cor((numeric_ads$Daily.Internet.Usage), (numeric_ads$Age))",
        "[1] -0.3679358\n",
        "> ",
        "# scatterplot",
        "> ",
        "plot((numeric_ads$Daily.Internet.Usage), (numeric_ads$Age), xlab = 'Time spent', ylab = 'Age')",
        "> ",
        "barplot(",
        "+ ",
        "  height = new_ads$Age,",
        "+ ",
        "  names = new_ads$Clicked.on.Ad",
        "+ ",
        ")",
        "> ",
        "clicks",
        "Error: object 'clicks' not found\n",
        "> ",
        "clicks <- table(new_ads$Clicked.on.Ad)",
        "> ",
        "clicks",
        "\n  0   1 \n500 492 \n",
        "> ",
        "barplot(",
        "+ ",
        "  clicks",
        "+ ",
        ")",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ads_clickers <- new_ads[new_ads$Clicked.on.Ad == 1]",
        "Error in `[.data.frame`(new_ads, new_ads$Clicked.on.Ad == 1) : \n  undefined columns selected\n",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ads_clickers <- new_ads[new_ads$Clicked.on.Ad == '1']",
        "Error in `[.data.frame`(new_ads, new_ads$Clicked.on.Ad == \"1\") : \n  undefined columns selected\n",
        "> ",
        "",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "new_ads[new_ads$Clicked.on.Ad == '1']",
        "Error in `[.data.frame`(new_ads, new_ads$Clicked.on.Ad == \"1\") : \n  undefined columns selected\n",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "new_ads[new_ads$Clicked.on.Ad]",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "new_ads$Clicked.on.Ad",
        "  [1] 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1\n [59] 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0\n[117] 1 1 1 1 0 0 0 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1\n[175] 0 1 0 1 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 1 0 0 0 1 1\n[233] 1 1 1 1 0 1 0 1 1 0",
        " 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 0 1 0 1 1 1\n[291] 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0\n[349] 1 0 0 0 0 1 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 1 0 0 1 0 1 0 1 0 1\n[407] 1 1 1 1 0 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 1 0 1 0\n[465] 1 1 1 1 0 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0",
        " 0 1 0 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 0 1\n[523] 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1\n[581] 1 1 1 0 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 1 1 1 0 1 0\n[639] 0 0 0 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0\n[697] 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1",
        " 0 0 1 1 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1\n[755] 1 0 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 1 1 0\n[813] 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 1\n[871] 0 0 0 1 0 0 1 0 1 1 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0\n[929] 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0",
        " 1 0 0 1 0 1 0 0 1 1 1 0\n[987] 1 1 1 1 0 1\n",
        "> ",
        "",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "new_ads$Clicked.on.Ad == 1",
        "  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [20]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n [39]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [58]  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n [77]  TRUE FALSE  TRUE  TRUE FALSE",
        " FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [96] FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE\n[115] FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n[134] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n[153] FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE",
        "  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE\n[172] FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[191]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE\n[210] FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n[229] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE",
        "  TRUE  TRUE\n[248]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[267] FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[286]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n[305]  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE\n[324] FALSE  TRUE  TRUE",
        " FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE\n[343] FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[362] FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE\n[381]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[400]  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE",
        "  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[419] FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n[438]  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n[457] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[476] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE",
        "  TRUE FALSE  TRUE  TRUE\n[495] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[514]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[533] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n[552]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[571] FALSE",
        "  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n[590]  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[609]  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n[628] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n[647] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE",
        " FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n[666]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE\n[685] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[704]  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n[723] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE",
        "  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n[742]  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n[761]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[780] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n[799] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE",
        "\n[818] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n[837] FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE\n[856] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n[875] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n[894]  TRUE  TRUE  TRUE FALSE FALSE",
        " FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[913] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[932]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n[951] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[970]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE",
        " FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[989]  TRUE  TRUE FALSE  TRUE\n",
        "> ",
        "",
        "> ",
        "ad_clickers",
        "Error: object 'ad_clickers' not found\n",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ad_clickers <- new_ads$Clicked.on.Ad == 1",
        "> ",
        "ad_clickers",
        "  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [20]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n [39]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [58]  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n [77]  TRUE FALSE  TRUE  TRUE FALSE",
        " FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [96] FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE\n[115] FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n[134] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n[153] FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE",
        "  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE\n[172] FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[191]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE\n[210] FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n[229] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE",
        "  TRUE  TRUE\n[248]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[267] FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[286]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n[305]  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE\n[324] FALSE  TRUE  TRUE",
        " FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE\n[343] FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[362] FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE\n[381]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[400]  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE",
        "  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[419] FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n[438]  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n[457] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[476] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE",
        "  TRUE FALSE  TRUE  TRUE\n[495] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[514]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n[533] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n[552]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[571] FALSE",
        "  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n[590]  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[609]  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n[628] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n[647] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE",
        " FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n[666]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE\n[685] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n[704]  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n[723] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE",
        "  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n[742]  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n[761]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[780] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n[799] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE",
        "\n[818] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n[837] FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE\n[856] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE\n[875] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n[894]  TRUE  TRUE  TRUE FALSE FALSE",
        " FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[913] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE\n[932]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n[951] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n[970]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE",
        " FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[989]  TRUE  TRUE FALSE  TRUE\n",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ad_clickers <- new_ads[new_ads$Clicked.on.Ad == 1]",
        "Error in `[.data.frame`(new_ads, new_ads$Clicked.on.Ad == 1) : \n  undefined columns selected\n",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ad_clickers <- new_ads[]",
        "> ",
        "ad_clickers",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ad_clickers <- new_ads[which(new_ads$Clicked.on.Ad == 1)]",
        "Error in `[.data.frame`(new_ads, which(new_ads$Clicked.on.Ad == 1)) : \n  undefined columns selected\n",
        "> ",
        "View(new_ads)",
        "> ",
        "# Analysis of people who click on the ads",
        "> ",
        "ad_clickers <- new_ads[which(new_ads$Clicked.on.Ad == 1),]",
        "> ",
        "ad_clickers",
        "> ",
        "# Most popular age group of people clicking on ads",
        "> ",
        "hist(ad_clickers$Age)",
        "> ",
        "#Most popular nations",
        "> ",
        "hist(ad_clickers$Country)",
        "Error in hist.default(ad_clickers$Country) : 'x' must be numeric\n",
        "> ",
        "#Most popular nations",
        "> ",
        "country_table <- table(ad_clickers$Country)",
        "> ",
        "country_table",
        "\n                                        Afghanistan                                             Albania \n                                                  5                                                   4 \n                                            Algeria                                      American Samoa \n                                                  2                                                   3 \n                                            Andorra                                              Angola ",
        "\n                                                  2                                                   1 \n                                           Anguilla        Antarctica (the territory South of 60 deg S) \n                                                  3                                                   2 \n                                Antigua and Barbuda                                           Argentina \n                                                  4                                                   1 ",
        "\n                                            Armenia                                           Australia \n                                                  1                                                   7 \n                                            Austria                                             Bahamas \n                                                  1                                                   4 \n                                            Bahrain                                          Bangladesh ",
        "\n                                                  2                                                   2 \n                                           Barbados                                             Belarus \n                                                  2                                                   3 \n                                            Belgium                                              Belize \n                                                  2                                                   2 ",
        "\n                                              Benin                                              Bhutan \n                                                  1                                                   1 \n                             Bosnia and Herzegovina                           Bouvet Island (Bouvetoya) \n                                                  3                                                   2 \n                                             Brazil British Indian Ocean Territory (Chagos Archipelago) ",
        "\n                                                  3                                                   1 \n                             British Virgin Islands                                   Brunei Darussalam \n                                                  1                                                   2 \n                                           Bulgaria                                        Burkina Faso \n                                                  4                                                   1 ",
        "\n                                            Burundi                                            Cambodia \n                                                  2                                                   2 \n                                             Canada                                      Cayman Islands \n                                                  3                                                   3 \n                           Central African Republic                                                Chad ",
        "\n                                                  1                                                   2 \n                                              Chile                                               China \n                                                  3                                                   4 \n                                   Christmas Island                                            Colombia \n                                                  4                                                   1 ",
        "\n                                            Comoros                                               Congo \n                                                  1                                                   3 \n                                       Cook Islands                                          Costa Rica \n                                                  1                                                   2 \n                                      Cote d'Ivoire                                                Cuba ",
        "\n                                                  3                                                   4 \n                                             Cyprus                                      Czech Republic \n                                                  4                                                   4 \n                                            Denmark                                            Djibouti \n                                                  2                                                   1 ",
        "\n                                           Dominica                                  Dominican Republic \n                                                  2                                                   2 \n                                            Ecuador                                               Egypt \n                                                  2                                                   3 \n                                        El Salvador                                   Equatorial Guinea ",
        "\n                                                  3                                                   3 \n                                            Eritrea                                             Estonia \n                                                  3                                                   1 \n                                           Ethiopia                         Falkland Islands (Malvinas) \n                                                  7                                                   2 ",
        "\n                                      Faroe Islands                                                Fiji \n                                                  2                                                   3 \n                                            Finland                                              France \n                                                  1                                                   5 \n                                      French Guiana                                    French Polynesia ",
        "\n                                                  3                                                   1 \n                        French Southern Territories                                              Gambia \n                                                  1                                                   1 \n                                            Georgia                                             Germany \n                                                  2                                                   1 ",
        "\n                                              Ghana                                              Greece \n                                                  2                                                   3 \n                                          Greenland                                             Grenada \n                                                  1                                                   2 \n                                         Guadeloupe                                                Guam ",
        "\n                                                  1                                                   2 \n                                          Guatemala                                            Guernsey \n                                                  3                                                   2 \n                                             Guinea                                       Guinea-Bissau \n                                                  2                                                   1 ",
        "\n                                             Guyana                                               Haiti \n                                                  3                                                   1 \n                  Heard Island and McDonald Islands                       Holy See (Vatican City State) \n                                                  2                                                   1 \n                                           Honduras                                           Hong Kong ",
        "\n                                                  2                                                   4 \n                                            Hungary                                             Iceland \n                                                  5                                                   1 \n                                          Indonesia                                                Iran \n                                                  4                                                   3 ",
        "\n                                            Ireland                                         Isle of Man \n                                                  1                                                   1 \n                                             Israel                                               Italy \n                                                  2                                                   1 \n                                            Jamaica                                               Japan ",
        "\n                                                  2                                                   2 \n                                             Jersey                                          Kazakhstan \n                                                  3                                                   2 \n                                              Kenya                                            Kiribati \n                                                  4                                                   1 ",
        "\n                                              Korea                                              Kuwait \n                                                  3                                                   1 \n                                    Kyrgyz Republic                    Lao People's Democratic Republic \n                                                  1                                                   2 \n                                             Latvia                                             Lebanon ",
        "\n                                                  4                                                   3 \n                                            Liberia                              Libyan Arab Jamahiriya \n                                                  6                                                   2 \n                                      Liechtenstein                                           Lithuania \n                                                  6                                                   3 ",
        "\n                                         Luxembourg                                               Macao \n                                                  2                                                   3 \n                                          Macedonia                                          Madagascar \n                                                  1                                                   2 \n                                             Malawi                                            Maldives ",
        "\n                                                  2                                                   2 \n                                               Mali                                               Malta \n                                                  1                                                   3 \n                                   Marshall Islands                                          Martinique \n                                                  1                                                   3 ",
        "\n                                         Mauritania                                           Mauritius \n                                                  1                                                   1 \n                                            Mayotte                                              Mexico \n                                                  5                                                   4 \n                                         Micronesia                                             Moldova ",
        "\n                                                  4                                                   2 \n                                             Monaco                                            Mongolia \n                                                  1                                                   4 \n                                         Montenegro                                          Montserrat \n                                                  2                                                   1 ",
        "\n                                            Morocco                                             Myanmar \n                                                  1                                                   1 \n                                            Namibia                                               Nauru \n                                                  1                                                   1 \n                                        Netherlands                                Netherlands Antilles ",
        "\n                                                  3                                                   2 \n                                      New Caledonia                                         New Zealand \n                                                  2                                                   2 \n                                              Niger                                      Norfolk Island \n                                                  2                                                   2 ",
        "\n                           Northern Mariana Islands                                              Norway \n                                                  2                                                   1 \n                                           Pakistan                                               Palau \n                                                  1                                                   2 \n                              Palestinian Territory                                    Papua New Guinea ",
        "\n                                                  2                                                   3 \n                                           Paraguay                                                Peru \n                                                  1                                                   5 \n                                        Philippines                                    Pitcairn Islands \n                                                  3                                                   1 ",
        "\n                                             Poland                                            Portugal \n                                                  3                                                   1 \n                                        Puerto Rico                                               Qatar \n                                                  3                                                   2 \n                                            Romania                                  Russian Federation ",
        "\n                                                  1                                                   1 \n                                             Rwanda                                    Saint Barthelemy \n                                                  2                                                   2 \n                                       Saint Helena                               Saint Kitts and Nevis \n                                                  2                                                   1 ",
        "\n                                        Saint Lucia                                        Saint Martin \n                                                  1                                                   2 \n                          Saint Pierre and Miquelon                    Saint Vincent and the Grenadines \n                                                  3                                                   3 \n                                              Samoa                                          San Marino ",
        "\n                                                  4                                                   1 \n                              Sao Tome and Principe                                        Saudi Arabia \n                                                  2                                                   3 \n                                            Senegal                                              Serbia \n                                                  5                                                   3 ",
        "\n                                         Seychelles                                        Sierra Leone \n                                                  1                                                   2 \n                                          Singapore                                            Slovenia \n                                                  1                                                   1 \n                                            Somalia                                        South Africa ",
        "\n                                                  2                                                   6 \n       South Georgia and the South Sandwich Islands                                               Spain \n                                                  1                                                   3 \n                                           Suriname                        Svalbard & Jan Mayen Islands \n                                                  1                                                   4 ",
        "\n                                             Sweden                                         Switzerland \n                                                  1                                                   3 \n                               Syrian Arab Republic                                              Taiwan \n                                                  1                                                   4 \n                                         Tajikistan                                            Tanzania ",
        "\n                                                  1                                                   1 \n                                           Thailand                                         Timor-Leste \n                                                  2                                                   1 \n                                               Togo                                             Tokelau \n                                                  1                                                   3 ",
        "\n                                              Tonga                                 Trinidad and Tobago \n                                                  2                                                   2 \n                                            Tunisia                                              Turkey \n                                                  1                                                   7 \n                                       Turkmenistan                            Turks and Caicos Islands ",
        "\n                                                  2                                                   3 \n                                             Tuvalu                                              Uganda \n                                                  3                                                   4 \n                                            Ukraine                                United Arab Emirates \n                                                  1                                                   3 ",
        "\n                                     United Kingdom                United States Minor Outlying Islands \n                                                  2                                                   2 \n                           United States of America                        United States Virgin Islands \n                                                  3                                                   2 \n                                            Uruguay                                          Uzbekistan ",
        "\n                                                  1                                                   1 \n                                            Vanuatu                                           Venezuela \n                                                  1                                                   3 \n                                            Vietnam                                   Wallis and Futuna \n                                                  2                                                   1 ",
        "\n                                     Western Sahara                                               Yemen \n                                                  4                                                   2 \n                                             Zambia                                            Zimbabwe \n                                                  3                                                   4 \n\nRestarting R session...\n\n"
    ]
}